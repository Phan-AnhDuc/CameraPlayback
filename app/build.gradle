plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'com.example.cameraplayback'

    compileSdk 34
    defaultConfig {

        applicationId "vn.vnpt.ONEHome"
        minSdkVersion 24
        targetSdk 33
        versionCode 75
        versionName "3.2.13"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'

        // Build Config
        buildConfigField "boolean", "MQTT_SSL_ENABLED", "true"
        buildConfigField "boolean", "MQTT_USERNAME_ENCODED", "true"
        buildConfigField "String", "KEY_SECRET", "\"${"eR4kqRvlDqeJIWx+mSj/mG437Ed7pzTT"}\""
        buildConfigField "String", "CIPHER_INSTANCE", "\"${"AES/CBC/PKCS5Padding"}\""
        buildConfigField "String", "IV", "\"${"eR4kqRvlDqdwiyvlP7WtjW437Ed7pzTT"}\""
        buildConfigField "String", "QA_SERVER", '"http://sanphamvnpt.vn/question"'
        buildConfigField "String", "DB_NAME", "\"onehome_app_db\""
        buildConfigField "Integer", "LOADER_EXPIRED_TIME", "35"
        buildConfigField "Integer", "META_DATA_EXPIRED_TIME", "35"
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }

    packagingOptions {
        //Nén file .so như quy ước cũ của sdk 21, nếu không set giá trị này khi sdk 23 trở lên sẽ không nén
        jniLibs {
            useLegacyPackaging = true
        }
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")

        pickFirst 'lib/arm64-v8a/libavcodec.so'
        pickFirst 'lib/armeabi-v7a/libavcodec.so'
        pickFirst 'lib/x86/libavcodec.so'
        pickFirst 'lib/x86_64/libavcodec.so'

        pickFirst 'lib/arm64-v8a/libavutil.so'
        pickFirst 'lib/armeabi-v7a/libavutil.so'
        pickFirst 'lib/x86/libavutil.so'
        pickFirst 'lib/x86_64/libavutil.so'

        pickFirst 'lib/arm64-v8a/libswscale.so'
        pickFirst 'lib/armeabi-v7a/libswscale.so'
        pickFirst 'lib/x86/libswscale.so'
        pickFirst 'lib/x86_64/libswscale.so'

        pickFirst 'lib/arm64-v8a/libavformat.so'
        pickFirst 'lib/armeabi-v7a/libavformat.so'
        pickFirst 'lib/x86/libavformat.so'
        pickFirst 'lib/x86_64/libavformat.so'

        pickFirst 'lib/arm64-v8a/libavdevice.so'
        pickFirst 'lib/armeabi-v7a/libavdevice.so'

        pickFirst 'lib/arm64-v8a/libswresample.so'
        pickFirst 'lib/armeabi-v7a/libswresample.so'

        pickFirst 'lib/arm64-v8a/libavfilter.so'
        pickFirst 'lib/armeabi-v7a/libavfilter.so'

        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'

        pickFirst 'lib/*/liblog.so'
        pickFirst 'lib/*/libc++_shared.so'
        pickFirst 'lib/*/libyuv.so'
        pickFirst 'lib/*/libopenh264.so'
        pickFirst 'lib/*/libv8wrapper.so'
        pickFirst 'lib/*/libv8android.so'
        // An Android Archive (AAR) file contains an Android library. If the .so file exists in multiple AAR files, select the first AAR file.
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig = true
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    ndkVersion '21.3.6528147'
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.compilercommon
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation files('libs/ipcamera-1.0.aar')
    implementation(libs.rxjava)
    implementation libs.rxandroid
    implementation libs.commons.lang
    implementation libs.listenablefuture
}